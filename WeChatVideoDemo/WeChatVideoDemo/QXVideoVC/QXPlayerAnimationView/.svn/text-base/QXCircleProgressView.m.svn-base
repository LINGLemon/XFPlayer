//
//  QXCircleProgressView.m
//  ProgressViewTest
//
//  Created by lxf on 17/7/1.
//  Copyright © 2017年 lxf. All rights reserved.
//

#import "QXCircleProgressView.h"

#define ProgressViewDiameter    20
#define CircleViewDiameter      20
#define LineWidth               2

@interface QXCircleProgressView ()

@property (nonatomic, assign) CGRect circlesSize;

@end

@implementation QXCircleProgressView

+ (instancetype)viewWithFrame:(CGRect)frame circlesSize:(CGRect)size
{
    return [[self alloc] initWithFrame:frame circlesSize:size];
}

+ (QXCircleProgressView *)showIn:(UIView*)view withXOffset:(CGFloat)xOffset
{
    [self hideIn:view];
    
    QXCircleProgressView *progressView = [QXCircleProgressView viewWithFrame:CGRectMake(0, 0, ProgressViewDiameter, ProgressViewDiameter)
                                                                   circlesSize:CGRectMake(0, 0, CircleViewDiameter, CircleViewDiameter)];
    
    progressView.frame = CGRectMake((view.bounds.size.width- ProgressViewDiameter)/2 + xOffset, (view.bounds.size.height - ProgressViewDiameter)/2, ProgressViewDiameter, ProgressViewDiameter);
    progressView.layer.cornerRadius = 10;
    
    //阴影
    progressView.backgroundColor = [UIColor clearColor];
    progressView.backCircle.shadowColor = [UIColor grayColor].CGColor;
    progressView.backCircle.shadowRadius = 3;
    progressView.backCircle.shadowOffset = CGSizeMake(0, 0);
    progressView.backCircle.shadowOpacity = 1;
    progressView.backCircle.fillColor = [UIColor colorWithRed:151/255.0 green:151/255.0 blue:151/255.0 alpha:0.8].CGColor;
    progressView.backCircle.strokeColor = [UIColor colorWithRed:250/255.0 green:250/255.0 blue:250/255.0 alpha:1].CGColor;
    
    progressView.foreCircle.lineCap = @"butt";
    progressView.foreCircle.strokeColor = [UIColor colorWithRed:223/255.0 green:223/255.0 blue:223/255.0 alpha:1].CGColor;;
    progressView.progressValue = 0;
    
    [view addSubview:progressView];
    
    return progressView;
}

+ (QXCircleProgressView *)hideIn:(UIView *)view
{
    QXCircleProgressView *progressView = nil;
    for (QXCircleProgressView *subView in view.subviews)
    {
        if ([subView isKindOfClass:[QXCircleProgressView class]])
        {
            [subView removeFromSuperview];
            progressView = subView;
        }
    }
    return progressView;
}

- (instancetype)initWithFrame:(CGRect)frame circlesSize:(CGRect)size
{
    self = [super initWithFrame:frame];
    if (self)
    {
        self.circlesSize = size;
        [self initView];
    }
    return self;
}

- (void)initView
{
    self.backgroundColor = [UIColor colorWithRed:0 green:0 blue:0 alpha:0.8];
    [self addBackCircleWithSize:(ProgressViewDiameter + LineWidth + 1) lineWidth:LineWidth];
    [self addForeCircleWidthSize:CircleViewDiameter lineWidth:CircleViewDiameter];
}

//添加背景的圆环
- (void)addBackCircleWithSize:(CGFloat)radius lineWidth:(CGFloat)lineWidth
{
    self.backCircle = [self createShapeLayerWithSize:radius lineWith:lineWidth color:[UIColor grayColor]];
    self.backCircle.strokeStart = 0;
    self.backCircle.strokeEnd = 1;
    self.backCircle.strokeColor = [UIColor colorWithRed:80/255.0 green:80/255.0 blue:80/255.0 alpha:0.3].CGColor;
    [self.layer addSublayer:self.backCircle];
}

//前面的圆环
- (void)addForeCircleWidthSize:(CGFloat)radius lineWidth:(CGFloat)lineWidth
{
    self.foreCircle = [self createShapeLayerWithSize:radius lineWith:lineWidth color:[UIColor greenColor]];
    
    self.foreCircle.path = [UIBezierPath bezierPathWithArcCenter:CGPointMake(radius, radius)
                                                         radius:radius-lineWidth/2
                                                     startAngle:-M_PI/2
                                                       endAngle:M_PI/180*270
                                                      clockwise:YES].CGPath;
    self.foreCircle.strokeStart = 0;
    self.foreCircle.strokeEnd = 0.8;
    self.foreCircle.strokeColor = [UIColor whiteColor].CGColor;
    [self.layer addSublayer:self.foreCircle];
}

//创建圆环
- (CAShapeLayer *)createShapeLayerWithSize:(CGFloat)radius lineWith:(CGFloat)lineWidth color:(UIColor *)color
{
    CGRect foreCircle_frame = CGRectMake(self.bounds.size.width/2-radius,
                                        self.bounds.size.height/2-radius,
                                        radius*2,
                                        radius*2);
    
    CAShapeLayer *layer = [CAShapeLayer layer];
    layer.frame = foreCircle_frame;
    UIBezierPath *path = [UIBezierPath bezierPathWithArcCenter:CGPointMake(radius, radius)
                                                        radius:radius-lineWidth/2
                                                    startAngle:0
                                                      endAngle:M_PI*2
                                                     clockwise:YES];
    layer.path = path.CGPath;
    layer.fillColor = [UIColor clearColor].CGColor;
    layer.backgroundColor = [UIColor clearColor].CGColor;
    layer.strokeColor = color.CGColor;
    layer.lineWidth = lineWidth;
    layer.lineCap = @"round";
    
    return layer;
}

-(void)setProgressValue:(CGFloat)progressValue
{
    if (self.foreCircle)
    {
        self.foreCircle.strokeEnd = progressValue;
    }
}

@end


















